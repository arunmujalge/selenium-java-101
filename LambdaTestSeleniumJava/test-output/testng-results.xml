<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="9" failed="3" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-01-09T13:16:34 IST" name="Parallel Test Suite" finished-at="2023-01-09T13:20:01 IST" duration-ms="206942">
    <groups>
    </groups>
    <test started-at="2023-01-09T13:16:34 IST" name="Chrome Test" finished-at="2023-01-09T13:17:25 IST" duration-ms="51018">
      <class name="lambdatestjava.LambdaTestJava3">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdatestjava.LambdaTestJava3@1b7cc17c]" started-at="2023-01-09T13:16:34 IST" name="setUp" finished-at="2023-01-09T13:16:49 IST" duration-ms="14798" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WIN10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScenario3()[pri:0, instance:lambdatestjava.LambdaTestJava3@1b7cc17c]" started-at="2023-01-09T13:16:49 IST" name="testScenario3" finished-at="2023-01-09T13:17:04 IST" duration-ms="15315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenario3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdatestjava.LambdaTestJava3@1b7cc17c]" started-at="2023-01-09T13:17:04 IST" name="tearDown" finished-at="2023-01-09T13:17:06 IST" duration-ms="1884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdatestjava.LambdaTestJava3 -->
      <class name="lambdatestjava.LambdaTestJava2">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdatestjava.LambdaTestJava2@4efbca5a]" started-at="2023-01-09T13:16:34 IST" name="setUp" finished-at="2023-01-09T13:16:48 IST" duration-ms="13792" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WIN10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScenario2()[pri:0, instance:lambdatestjava.LambdaTestJava2@4efbca5a]" started-at="2023-01-09T13:16:48 IST" name="testScenario2" finished-at="2023-01-09T13:16:54 IST" duration-ms="6004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenario2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdatestjava.LambdaTestJava2@4efbca5a]" started-at="2023-01-09T13:16:54 IST" name="tearDown" finished-at="2023-01-09T13:16:56 IST" duration-ms="1872" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdatestjava.LambdaTestJava2 -->
      <class name="lambdatestjava.LambdaTestJava">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdatestjava.LambdaTestJava@5c33f1a9]" started-at="2023-01-09T13:16:34 IST" name="setUp" finished-at="2023-01-09T13:17:17 IST" duration-ms="42794" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[88.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WIN10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScenario1()[pri:0, instance:lambdatestjava.LambdaTestJava@5c33f1a9]" started-at="2023-01-09T13:17:17 IST" name="testScenario1" finished-at="2023-01-09T13:17:23 IST" duration-ms="6348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenario1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdatestjava.LambdaTestJava@5c33f1a9]" started-at="2023-01-09T13:17:23 IST" name="tearDown" finished-at="2023-01-09T13:17:25 IST" duration-ms="1833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdatestjava.LambdaTestJava -->
    </test> <!-- Chrome Test -->
    <test started-at="2023-01-09T13:17:25 IST" name="Firefox Test" finished-at="2023-01-09T13:18:26 IST" duration-ms="60833">
      <class name="lambdatestjava.LambdaTestJava3">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdatestjava.LambdaTestJava3@71d44a3]" started-at="2023-01-09T13:17:25 IST" name="setUp" finished-at="2023-01-09T13:17:38 IST" duration-ms="12382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[82.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WIN7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScenario3()[pri:0, instance:lambdatestjava.LambdaTestJava3@71d44a3]" started-at="2023-01-09T13:17:38 IST" name="testScenario3" finished-at="2023-01-09T13:17:58 IST" duration-ms="20023" status="FAIL">
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method lambdatestjava.LambdaTestJava3.testScenario3() didn't finish within the time-out 20000]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method lambdatestjava.LambdaTestJava3.testScenario3() didn't finish within the time-out 20000
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:350)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:301)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenario3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdatestjava.LambdaTestJava3@71d44a3]" started-at="2023-01-09T13:17:58 IST" name="tearDown" finished-at="2023-01-09T13:18:00 IST" duration-ms="2862" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdatestjava.LambdaTestJava3 -->
      <class name="lambdatestjava.LambdaTestJava2">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdatestjava.LambdaTestJava2@73a1e9a9]" started-at="2023-01-09T13:17:25 IST" name="setUp" finished-at="2023-01-09T13:17:47 IST" duration-ms="22067" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[82.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WIN7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScenario2()[pri:0, instance:lambdatestjava.LambdaTestJava2@73a1e9a9]" started-at="2023-01-09T13:17:47 IST" name="testScenario2" finished-at="2023-01-09T13:17:54 IST" duration-ms="6867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenario2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdatestjava.LambdaTestJava2@73a1e9a9]" started-at="2023-01-09T13:17:54 IST" name="tearDown" finished-at="2023-01-09T13:17:57 IST" duration-ms="2851" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdatestjava.LambdaTestJava2 -->
      <class name="lambdatestjava.LambdaTestJava">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdatestjava.LambdaTestJava@77888435]" started-at="2023-01-09T13:17:25 IST" name="setUp" finished-at="2023-01-09T13:18:15 IST" duration-ms="50324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[82.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WIN7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScenario1()[pri:0, instance:lambdatestjava.LambdaTestJava@77888435]" started-at="2023-01-09T13:18:15 IST" name="testScenario1" finished-at="2023-01-09T13:18:23 IST" duration-ms="7672" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenario1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdatestjava.LambdaTestJava@77888435]" started-at="2023-01-09T13:18:23 IST" name="tearDown" finished-at="2023-01-09T13:18:26 IST" duration-ms="2831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdatestjava.LambdaTestJava -->
    </test> <!-- Firefox Test -->
    <test started-at="2023-01-09T13:18:26 IST" name="Microsoft Edge Test" finished-at="2023-01-09T13:19:11 IST" duration-ms="45239">
      <class name="lambdatestjava.LambdaTestJava3">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdatestjava.LambdaTestJava3@1bb5a082]" started-at="2023-01-09T13:18:26 IST" name="setUp" finished-at="2023-01-09T13:18:55 IST" duration-ms="29394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[87.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS Sierra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScenario3()[pri:0, instance:lambdatestjava.LambdaTestJava3@1bb5a082]" started-at="2023-01-09T13:18:55 IST" name="testScenario3" finished-at="2023-01-09T13:19:09 IST" duration-ms="13927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenario3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdatestjava.LambdaTestJava3@1bb5a082]" started-at="2023-01-09T13:19:09 IST" name="tearDown" finished-at="2023-01-09T13:19:11 IST" duration-ms="1911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdatestjava.LambdaTestJava3 -->
      <class name="lambdatestjava.LambdaTestJava2">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdatestjava.LambdaTestJava2@3e694b3f]" started-at="2023-01-09T13:18:26 IST" name="setUp" finished-at="2023-01-09T13:18:38 IST" duration-ms="11792" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[87.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS Sierra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScenario2()[pri:0, instance:lambdatestjava.LambdaTestJava2@3e694b3f]" started-at="2023-01-09T13:18:38 IST" name="testScenario2" finished-at="2023-01-09T13:18:43 IST" duration-ms="4721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenario2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdatestjava.LambdaTestJava2@3e694b3f]" started-at="2023-01-09T13:18:43 IST" name="tearDown" finished-at="2023-01-09T13:18:44 IST" duration-ms="1905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdatestjava.LambdaTestJava2 -->
      <class name="lambdatestjava.LambdaTestJava">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdatestjava.LambdaTestJava@65fb9ffc]" started-at="2023-01-09T13:18:26 IST" name="setUp" finished-at="2023-01-09T13:18:48 IST" duration-ms="22226" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[87.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[macOS Sierra]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScenario1()[pri:0, instance:lambdatestjava.LambdaTestJava@65fb9ffc]" started-at="2023-01-09T13:18:48 IST" name="testScenario1" finished-at="2023-01-09T13:18:54 IST" duration-ms="5476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenario1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdatestjava.LambdaTestJava@65fb9ffc]" started-at="2023-01-09T13:18:54 IST" name="tearDown" finished-at="2023-01-09T13:18:56 IST" duration-ms="1879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdatestjava.LambdaTestJava -->
    </test> <!-- Microsoft Edge Test -->
    <test started-at="2023-01-09T13:19:11 IST" name="IE Test" finished-at="2023-01-09T13:20:01 IST" duration-ms="49679">
      <class name="lambdatestjava.LambdaTestJava3">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdatestjava.LambdaTestJava3@639c2c1d]" started-at="2023-01-09T13:19:11 IST" name="setUp" finished-at="2023-01-09T13:19:33 IST" duration-ms="21506" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WIN10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScenario3()[pri:0, instance:lambdatestjava.LambdaTestJava3@639c2c1d]" started-at="2023-01-09T13:19:33 IST" name="testScenario3" finished-at="2023-01-09T13:19:39 IST" duration-ms="6067" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Please fill out this field.] but found [This is a required field]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Please fill out this field.] but found [This is a required field]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at lambdatestjava.LambdaTestJava3.testScenario3(LambdaTestJava3.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:47)
at org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:76)
at org.testng.internal.invokers.InvokeMethodRunnable.run(InvokeMethodRunnable.java:33)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:345)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:301)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenario3 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdatestjava.LambdaTestJava3@639c2c1d]" started-at="2023-01-09T13:19:39 IST" name="tearDown" finished-at="2023-01-09T13:19:41 IST" duration-ms="1717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdatestjava.LambdaTestJava3 -->
      <class name="lambdatestjava.LambdaTestJava2">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdatestjava.LambdaTestJava2@515c6049]" started-at="2023-01-09T13:19:11 IST" name="setUp" finished-at="2023-01-09T13:19:53 IST" duration-ms="41644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WIN10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScenario2()[pri:0, instance:lambdatestjava.LambdaTestJava2@515c6049]" started-at="2023-01-09T13:19:53 IST" name="testScenario2" finished-at="2023-01-09T13:19:59 IST" duration-ms="6305" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [95] but found [51]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [95] but found [51]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at lambdatestjava.LambdaTestJava2.testScenario2(LambdaTestJava2.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:47)
at org.testng.internal.invokers.InvokeMethodRunnable.call(InvokeMethodRunnable.java:76)
at org.testng.internal.invokers.InvokeMethodRunnable.run(InvokeMethodRunnable.java:33)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeoutWithNoExecutor(MethodInvocationHelper.java:345)
at org.testng.internal.invokers.MethodInvocationHelper.invokeWithTimeout(MethodInvocationHelper.java:301)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenario2 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdatestjava.LambdaTestJava2@515c6049]" started-at="2023-01-09T13:19:59 IST" name="tearDown" finished-at="2023-01-09T13:20:01 IST" duration-ms="1721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdatestjava.LambdaTestJava2 -->
      <class name="lambdatestjava.LambdaTestJava">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:lambdatestjava.LambdaTestJava@33d512c1]" started-at="2023-01-09T13:19:11 IST" name="setUp" finished-at="2023-01-09T13:19:23 IST" duration-ms="11478" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ie]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[WIN10]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScenario1()[pri:0, instance:lambdatestjava.LambdaTestJava@33d512c1]" started-at="2023-01-09T13:19:23 IST" name="testScenario1" finished-at="2023-01-09T13:19:33 IST" duration-ms="10389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScenario1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:lambdatestjava.LambdaTestJava@33d512c1]" started-at="2023-01-09T13:19:33 IST" name="tearDown" finished-at="2023-01-09T13:19:35 IST" duration-ms="1685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- lambdatestjava.LambdaTestJava -->
    </test> <!-- IE Test -->
  </suite> <!-- Parallel Test Suite -->
</testng-results>
